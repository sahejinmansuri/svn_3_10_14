<?php

class App_ScaneEngine {

  protected $passphrase;
  protected $keyver;

  public function checkOwner($docid,$mobileid) {
    $c = new App_Cellphone($mobileid);
    $cres = $c->getDocument($docid);

    if ($cres["mobile_id"] !== $mobileid) {
      throw new App_Exception_WsException('You do not own this document'); 
    }

  }

  public function initCrypto($type,$id=0) {
    $this->initKeyVer($type,$id);
    $this->initPassphrase();
  }

  public function initKeyVer($type,$id) {

    if ($type === "current") {

        $this->keyver = Zend_Registry::get('config')->keyver;

    } else if ($type === "document") {

        $cc = new App_CreditCard($id);
        $this->keyver = $cc->getKeyVer();

    }
  }

  public function initPassphrase() {

    $this->passphrase = file_get_contents("/var/www/html/incash/etc/wigi-keys/v" . $this->keyver . "/passphrase");
    $this->passphrase = rtrim($this->passphrase);

  }

public function addscane($userid, $mobileid, $moneyvalue, $timeperiod, $acceptedcurrency, $maxnoscan) {
  	
    $this->initCrypto("current");

    $c = new App_Cellphone($mobileid);
    $userid = $c->getUserId();
    
    //insert into regular user database
    $id = $c->addscane($userid, $mobileid,$moneyvalue, $timeperiod, $acceptedcurrency, $maxnoscan);
    return $id;
  }

 
  public function getqrcode($mobileid,$scanid) {
	$this->initCrypto("current");
    

    //put that amount of money into the cache
    $c = new App_Cellphone($mobileid);
    $cres = $c->getqrcode($scanid);

    $result = array();
   
    $result["money_value"]        = $cres["money_value"];
    $result["time_period"] = $cres["time_period"];
    $result["accepted_currency"]      = $cres["accepted_currency"];
    $result["max_no_of _scan"]      = $cres["max_no_of _scan"];
    $qcode = $cres["money_value"].'-'.$cres["time_period"].'-'.$cres["accepted_currency"].'-'.$cres["max_no_of _scan"];
    /*$code_params = array('text'            => "a$qcode",
          'backgroundColor' => '#FFFFFF',
          'foreColor' => '#000000',
          'padding' => 4,  //array(10,5,10,5),
          'moduleSize' => 8);

          $renderer_params = array('imageType' => 'png');
          Zend_Matrixcode::render('qrcode', $code_params, 'image', $renderer_params);*/
    //return $result;

  }

  
} 
?>
