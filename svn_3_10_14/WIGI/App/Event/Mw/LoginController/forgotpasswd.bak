<?php

class App_Event_Mw_LoginController_forgotpasswd extends App_Event_WsEventAbstract  {
	
	/**
	 * @param Zend_Controller_Request_Abstract $request 
	 */
	public function __construct(Zend_Controller_Request_Abstract $request = null) {
		parent::__construct($request);
		$this->_evt_data = array(
			'inputs' => array(
				'LOGIN' => array('generic', 100, 0, App_Constants::getFormLabel('LOGINID')),
				
				'QUESTION' => array('generic', 100, 0, App_Constants::getFormLabel('QUESTION')),
				'ANSWER' => array('generic', 100, 0, App_Constants::getFormLabel('ANSWER')),
			)
		);
	}
	
	public function getEvtData() {
		$data = parent::getEvtData();
		unset($data['inputs']['KEY']);
		unset($data['inputs']['IDENTIFIER']);
		return $data;
	}
	
	public function execute(&$session_data,&$pview,&$cthis){

        App_DataUtils::beginTransaction();
		
        $pview->showcontent = "form";

        if ($this->_request->getParam('doaction') != null) {

                $email = $this->_request->getParam('LOGIN');
                $uid = App_User::getUserIdFromEmail($email);

                $question = $this->_request->getParam('QUESTION');
                $answer = $this->_request->getParam('ANSWER');

                if ($uid != null) {

                        $a = new App_Auth();
                        $a->userConstraintCheck('merchant',$uid,'',false,false);


                        $user = new App_User($uid);
                        $mid = $user->getDefaultCellphone();
                        $status = $user->getStatus();

                        if ($status === "active") {


                                $cell = new App_Cellphone($mid);
                                $pview->question = $cell->getRandQuestion();

                                $m = new App_Messenger();

                                $pview->LOGIN = $email;

                                $pview->showcontent = "form2";

                                if ($question != null) {

                                        $checkanswer = $cell->questionMatches($question, $answer);

                                        if ($checkanswer) {

                                                $temp_pass = $user->getRandPassword();
                                                $user->setPassword($temp_pass);
                                                $user->setPasswordNeedsChanging(true);
                                                $m->sendMessage("Your temporary password is $temp_pass", $user->getEmail(), 1);
                                                $user->resetSuspendCount();                    
                                                $pview->showcontent = "success";

                                        } else {
                                                $user->increaseSuspendCount();
                                                $pview->showcontent = "error";

                                        }
                                }
                        } else {
                                $pview->showcontent = "error";
                        }

                        } else {

                                $pview->showcontent = "error";

                        }

        }


        App_DataUtils::commit();
	
	}
	
}

?>
